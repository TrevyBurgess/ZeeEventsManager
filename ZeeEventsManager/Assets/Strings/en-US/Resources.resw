<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About_Description.Text" xml:space="preserve">
    <value>Zee Events Manager: A simple event manager for keeping track of events you host, and who shows up.</value>
  </data>
  <data name="About_DescriptionHeader.Text" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="About_MediaContentHeader.Text" xml:space="preserve">
    <value>Media Content:</value>
  </data>
  <data name="About_MediaContent_Header.Text" xml:space="preserve">
    <value>Images come from:</value>
  </data>
  <data name="About_MediaContent_Usage.Text" xml:space="preserve">
    <value>(Usage)</value>
  </data>
  <data name="About_PageTitle" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AppLevel_CreateNewEvent" xml:space="preserve">
    <value>CREATE NEW EVENT</value>
  </data>
  <data name="AppLevel_CurrentEvent" xml:space="preserve">
    <value>Current Event</value>
  </data>
  <data name="AppLevel_LatestEvent" xml:space="preserve">
    <value>Latest Event</value>
  </data>
  <data name="AppLevel_MyContacts" xml:space="preserve">
    <value>My Contacts</value>
  </data>
  <data name="Calendar_AddNewEvent" xml:space="preserve">
    <value>Add New Event</value>
  </data>
  <data name="Calendar_PageTitle" xml:space="preserve">
    <value>Calendar</value>
  </data>
  <data name="ContactItem_Cancel.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ContactItem_Edit.Text" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ContactItem_EmailAddress.Header" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="ContactItem_EmailAddress.PlaceholderText" xml:space="preserve">
    <value>Email ...</value>
  </data>
  <data name="ContactItem_EmailAddress2.Header" xml:space="preserve">
    <value>Second Email</value>
  </data>
  <data name="ContactItem_EmailAddress2.PlaceholderText" xml:space="preserve">
    <value>Second Email ...</value>
  </data>
  <data name="ContactItem_FirstName.Header" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="ContactItem_FirstName.PlaceholderText" xml:space="preserve">
    <value>First Name ...</value>
  </data>
  <data name="ContactItem_LastName.Header" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="ContactItem_LastName.PlaceholderText" xml:space="preserve">
    <value>Last Name ...</value>
  </data>
  <data name="ContactItem_PageTitle" xml:space="preserve">
    <value>Add new Contact</value>
  </data>
  <data name="ContactItem_PhoneNumber.Header" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="ContactItem_PhoneNumber.PlaceholderText" xml:space="preserve">
    <value>Phone No. ...</value>
  </data>
  <data name="ContactItem_PhoneNumber2.Header" xml:space="preserve">
    <value>Second Phone</value>
  </data>
  <data name="ContactItem_PhoneNumber2.PlaceholderText" xml:space="preserve">
    <value>Second Phone ...</value>
  </data>
  <data name="ContactItem_Save.Text" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ContactNew_PageTitle" xml:space="preserve">
    <value>Add new Contact</value>
  </data>
  <data name="Contact_CancelConfirmDialog_Message" xml:space="preserve">
    <value>Changes will be lost</value>
  </data>
  <data name="Contact_CancelConfirmDialog_Title" xml:space="preserve">
    <value>Confirm cancel changes</value>
  </data>
  <data name="Contact_Discard" xml:space="preserve">
    <value>Discard</value>
  </data>
  <data name="Contact_Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Contact_Placeholder_FirstName" xml:space="preserve">
    <value>&lt;First Name&gt;</value>
  </data>
  <data name="Contact_Placeholder_LastName" xml:space="preserve">
    <value>&lt;Last Name&gt;</value>
  </data>
  <data name="Contact_ReturnToMyContacts" xml:space="preserve">
    <value>Return to My Contacts</value>
  </data>
  <data name="Contact_Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Contact_SaveConfirmDialog_Message" xml:space="preserve">
    <value>First Name, Last Name can't be blank</value>
  </data>
  <data name="Contact_SaveConfirmDialog_Title" xml:space="preserve">
    <value>Save Command</value>
  </data>
  <data name="EventAttendance_PageTitle" xml:space="preserve">
    <value>Attendance</value>
  </data>
  <data name="EventAttendance_TakeAttendance.Text" xml:space="preserve">
    <value>Take Attendance</value>
  </data>
  <data name="EventEditAttendance_AcceptChanges.Text" xml:space="preserve">
    <value>Accept Changes</value>
  </data>
  <data name="EventEditAttendance_ContactListIsEmpty.Text" xml:space="preserve">
    <value>Please add new contacts.
Your Contact List is empty.</value>
  </data>
  <data name="EventEditAttendance_EditGuestList.Text" xml:space="preserve">
    <value>Edit Guest List</value>
  </data>
  <data name="EventEditAttendance_GoToContacts.Text" xml:space="preserve">
    <value>Go to My Contacts</value>
  </data>
  <data name="EventGuestList_Guests.Text" xml:space="preserve">
    <value>Guests</value>
  </data>
  <data name="EventItem_Cancel.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="EventItem_Description.Header" xml:space="preserve">
    <value>Event Description</value>
  </data>
  <data name="EventItem_Description.PlaceholderText" xml:space="preserve">
    <value>Description ...</value>
  </data>
  <data name="EventItem_Edit.Text" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EventItem_EditAttendance.Text" xml:space="preserve">
    <value>Edit Attendance</value>
  </data>
  <data name="EventItem_EndDate.Header" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="EventItem_EndTime.Header" xml:space="preserve">
    <value>End Time</value>
  </data>
  <data name="EventItem_EndTime.PlaceholderText" xml:space="preserve">
    <value>End ...</value>
  </data>
  <data name="EventItem_EventIcon.Text" xml:space="preserve">
    <value>Event Icon</value>
  </data>
  <data name="EventItem_EventTitle.Header" xml:space="preserve">
    <value>Event Title</value>
  </data>
  <data name="EventItem_EventTitle.PlaceholderText" xml:space="preserve">
    <value>Event title ...</value>
  </data>
  <data name="EventItem_GuestList.Text" xml:space="preserve">
    <value>Guest List</value>
  </data>
  <data name="EventItem_MapType.Header" xml:space="preserve">
    <value>Map Type</value>
  </data>
  <data name="EventItem_Save.Text" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="EventItem_StartDate.Header" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="EventItem_StartTime.Header" xml:space="preserve">
    <value>Start Time</value>
  </data>
  <data name="EventItem_StartTime.PlaceholderText" xml:space="preserve">
    <value>Start ...</value>
  </data>
  <data name="EventItem_TakeAttendance.Text" xml:space="preserve">
    <value>Take Attendance</value>
  </data>
  <data name="EventItem_Venue.Header" xml:space="preserve">
    <value>Venue</value>
  </data>
  <data name="EventItem_Venue.PlaceholderText" xml:space="preserve">
    <value>Venue ...</value>
  </data>
  <data name="EventItem_VenueEmail.Header" xml:space="preserve">
    <value>Venue Contact Email</value>
  </data>
  <data name="EventItem_VenueEmail.PlaceholderText" xml:space="preserve">
    <value>Someone@SomePlace.com</value>
  </data>
  <data name="EventItem_VenuePhone.Header" xml:space="preserve">
    <value>Venue Contact Phone</value>
  </data>
  <data name="EventItem_VenuePhone.PlaceholderText" xml:space="preserve">
    <value>(111) 222 - 333</value>
  </data>
  <data name="Event_AcceptChanges" xml:space="preserve">
    <value>Accept Changes</value>
  </data>
  <data name="Event_CancelConfirmDialog_Message" xml:space="preserve">
    <value>Changes will be lost</value>
  </data>
  <data name="Event_CancelConfirmDialog_Title" xml:space="preserve">
    <value>Confirm cancel changes</value>
  </data>
  <data name="Event_DeleteConfirmDialog_Message" xml:space="preserve">
    <value>Are you sure you want to delete event</value>
  </data>
  <data name="Event_DeleteConfirmDialog_Title" xml:space="preserve">
    <value>Delete Command</value>
  </data>
  <data name="Event_DeleteEvent" xml:space="preserve">
    <value>Delete Event</value>
  </data>
  <data name="Event_DiscardChanges" xml:space="preserve">
    <value>Discard Changes</value>
  </data>
  <data name="Event_EditAttendance" xml:space="preserve">
    <value>Edit Attendance</value>
  </data>
  <data name="Event_EditEvent" xml:space="preserve">
    <value>Edit Event</value>
  </data>
  <data name="Event_Placeholder_SetTitle" xml:space="preserve">
    <value>&lt;Set Title&gt;</value>
  </data>
  <data name="Event_Placeholder_SetTitle_PastEvent" xml:space="preserve">
    <value>&lt;Set Title&gt; - (Event Past)</value>
  </data>
  <data name="Event_Placeholder_Titled_PastEvent" xml:space="preserve">
    <value>{0} - (Event Past)</value>
  </data>
  <data name="Event_ReturnToCalendar" xml:space="preserve">
    <value>Return to Calendar</value>
  </data>
  <data name="Event_ReturnToCurrentEvent" xml:space="preserve">
    <value>Return to Current Event</value>
  </data>
  <data name="Event_SaveConfirmDialog_Message" xml:space="preserve">
    <value>Event title can't be blank</value>
  </data>
  <data name="Event_SaveConfirmDialog_Title" xml:space="preserve">
    <value>Save Command</value>
  </data>
  <data name="Event_SaveEvent" xml:space="preserve">
    <value>Save Event</value>
  </data>
  <data name="Feedback_Emoji_Frown.Text" xml:space="preserve">
    <value>Send a frown</value>
  </data>
  <data name="Feedback_Emoji_Smile.Text" xml:space="preserve">
    <value>Send a smile</value>
  </data>
  <data name="MessageDialog_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="MessageDialog_Okay" xml:space="preserve">
    <value>Okay</value>
  </data>
  <data name="MyContacts_AddnewContact.Text" xml:space="preserve">
    <value>Add new Contact</value>
  </data>
  <data name="MyContacts_BackToEventList" xml:space="preserve">
    <value>Return to Event Guest List</value>
  </data>
  <data name="MyContacts_Discard.Text" xml:space="preserve">
    <value>Discard</value>
  </data>
  <data name="MyContacts_Edit.Text" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="MyContacts_EmptyListMessage.Text" xml:space="preserve">
    <value>Please add new contacts.
Your Contact List is empty.</value>
  </data>
  <data name="MyContacts_PageTitle" xml:space="preserve">
    <value>My Contacts</value>
  </data>
  <data name="MyContacts_Save.Text" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Navigation_Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="NewEvent_PageTitle" xml:space="preserve">
    <value>Add new event</value>
  </data>
  <data name="SearchTextBox.PlaceholderText" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Settings_CopyrightNotice.Text" xml:space="preserve">
    <value>© 2016 Trevy Burgess</value>
  </data>
  <data name="Settings_PageTitle" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Settings_PrivacyPolicy.Content" xml:space="preserve">
    <value>Privacy Policy</value>
  </data>
  <data name="Settings_PrivacyPolicy.NavigateUri" xml:space="preserve">
    <value>http://CyberFeedForward.com/ZeeEventsManager/PrivacyPolicy.html</value>
  </data>
  <data name="Settings_SetNameInStandardFormat.Content" xml:space="preserve">
    <value>Set name in standard format: Last, First</value>
  </data>
  <data name="SmileyDialog_EmailClientSelectionMessage.Text" xml:space="preserve">
    <value>When you click 'Send Feedback' button,
an email client selector might appear.
If it does, please select your favorite email
client to send your feedback email.</value>
  </data>
  <data name="SmileyDialog_EmailMessage" xml:space="preserve">
    <value>mailto:{0}?subject={1}&amp;body={2}</value>
  </data>
  <data name="SmileyDialog_EmailTitle" xml:space="preserve">
    <value>{0}-Feedback-{1}-Address: {2}</value>
  </data>
  <data name="SmileyDialog_Frown" xml:space="preserve">
    <value>Frown</value>
  </data>
  <data name="SmileyDialog_HowToImprove.Text" xml:space="preserve">
    <value>How can we improve?</value>
  </data>
  <data name="SmileyDialog_NoteTitle.Text" xml:space="preserve">
    <value>Note:</value>
  </data>
  <data name="SmileyDialog_ShowEmailBox.Content" xml:space="preserve">
    <value>Please reply</value>
  </data>
  <data name="SmileyDialog_ShowEmailBox.ToolTipService.ToolTip" xml:space="preserve">
    <value>Please reply</value>
  </data>
  <data name="SmileyDialog_Smile" xml:space="preserve">
    <value>Smile</value>
  </data>
  <data name="SmileyDialog_ThankYouForFeedback.Text" xml:space="preserve">
    <value>Thank-you for your feedback.</value>
  </data>
  <data name="SmileyDialog_WhatDidYouLike.Text" xml:space="preserve">
    <value>What did you like?</value>
  </data>
  <data name="SmileyDialog_WhatWasTheProblem.Text" xml:space="preserve">
    <value>What was the problem you faced?</value>
  </data>
</root>